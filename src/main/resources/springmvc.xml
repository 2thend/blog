<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
		
		 <context:property-placeholder location="classpath:yonyou.properties"/>
		
		<!--  注解的支持
		<mvc:annotation-driven/> :在springmvc中如果使用注解化，那么必须设置这个
		-->
		<mvc:annotation-driven/>
		<!-- 设置扫描的包 -->
		<context:component-scan base-package=".." use-default-filters="false">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		</context:component-scan>
		
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="suffix" value=".jsp"></property>
			<property name="prefix" value="/WEB-INF/views/module/"></property>
		</bean>
		
		<!-- 
		，会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler,
		    它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果
		    不是静态资源的请求，才由DispatcherServlet继续处理,也就是说，如果配置了这个的话，那么所以的静态文件都不会被拦截
		 -->
		<mvc:default-servlet-handler/>
		 
		<!-- 静态资源文件映射
			这个比上面的那个更进一步,发现是静态路径的时候,不由DispatcherServlet,
			并且可以指定静态资源的路径
		 -->
		<mvc:resources location="/static/" mapping="/static/**"/>  
		
		<!-- 设置直接路径映射  不用经过处理器 -->
		<mvc:view-controller path="/" view-name="redirect:/f"/>
		
		<!-- 
		设置拦截器
		 -->
		<mvc:interceptors>
			<mvc:interceptor>
				<mvc:mapping path="/**"/>
				<bean class="com.yonyou.hotusm.module.sys.interceptor.LogInterceptor"/>
			</mvc:interceptor>
		</mvc:interceptors>
		<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
		<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
    		<property name="maxUploadSize" value="10485760" />  
		</bean>
		
</beans>
